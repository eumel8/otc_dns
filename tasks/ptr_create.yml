- name: Send request to API (list EIP)
  uri:
    url: "{{ AUTH_URL_VPC }}/v1/{{ PROJECT_ID }}/publicips"
    method: GET
    return_content: yes
    validate_certs: yes
    headers:
      Content-Type: "application/json"
      X-Auth-Token: "{{ token['x_subject_token'] }}"
  register: floatingiplist_result
  retries: "{{ uri_retries }}"
  delay: "{{ uri_delay }}"
  until: floatingiplist_result.status == 200
  changed_when: false

- name: Set fact eip_id if public_ip_address is defined
  set_fact:
    eip_id: "{{ (floatingiplist_result.content|from_json)|json_query(\"publicips[?public_ip_address=='\" + public_ip_address + \"'].id|[0]\") }}"
  when:
    - (public_ip_address is defined and public_ip_address | ipaddr)

- name: Send request to API (create ptr)
  uri:
    url: "{{ AUTH_URL_DNS }}/v2/reverse/floatingips/{{ PROJECT_NAME }}:{{ eip_id }}"
    method: PATCH
    body_format: raw
    follow_redirects: all
    return_content: yes
    validate_certs: yes
    status_code: 200,201,202,203,400
    headers:
      Content-Type: "application/json"
      X-Auth-Token: "{{ token['x_subject_token'] }}"
    body: "{{ lookup('template', 'ptr_create.json.j2')|to_json }}"
  register: ptrrecord
  retries: "{{ uri_retries }}"
  delay: "{{ uri_delay }}"
  until: ptrrecord.status == 200 or ptrrecord.status == 201 or ptrrecord.status == 202 or ptrrecord.status == 203 or ptrrecord.status == 400
  changed_when: false
  when:
    - (ptr_name is defined and ptr_name | length != 0)
    - eip_id is defined

- debug:
    msg: "{{ ptrrecord }}"
